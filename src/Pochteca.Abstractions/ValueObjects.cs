// <auto-generated/>
#nullable enable
namespace Pochteca;

/// <summary>
/// Represents the unique identifier for a billing subject (organization or user).
/// Mirrors the shape of Ixtli's <c>TenantId</c> while avoiding a hard dependency.
/// </summary>
public readonly record struct TenantId
{
    /// <summary>
    /// The underlying GUID value of the tenant identifier.
    /// </summary>
    public Guid Value { get; }

    /// <summary>
    /// Initializes a new instance of the <see cref="TenantId"/> struct.
    /// </summary>
    /// <param name="value">The GUID value representing the tenant.</param>
    public TenantId(Guid value) => Value = value;

    /// <inheritdoc/>
    public override string ToString() => Value.ToString();
}

/// <summary>
/// Stable identifier for a logical API action (not necessarily the raw route).
/// </summary>
public readonly record struct EndpointKey
{
    /// <summary>
    /// The string value of the endpoint key.
    /// </summary>
    public string Value { get; }

    /// <summary>
    /// Initializes a new instance of the <see cref="EndpointKey"/> struct.
    /// </summary>
    /// <param name="value">The string value representing the endpoint key.</param>
    public EndpointKey(string value) => Value = value;

    /// <inheritdoc/>
    public override string ToString() => Value;
}

/// <summary>
/// Represents a deduplication key for billable mutations (idempotency).
/// </summary>
public readonly record struct IdempotencyKey
{
    /// <summary>
    /// The string value of the idempotency key.
    /// </summary>
    public string Value { get; }

    /// <summary>
    /// Initializes a new instance of the <see cref="IdempotencyKey"/> struct.
    /// </summary>
    /// <param name="value">The string value representing the idempotency key.</param>
    public IdempotencyKey(string value) => Value = value;

    /// <inheritdoc/>
    public override string ToString() => Value;
}

/// <summary>
/// Per-request correlation identifier (scoped to a payer/tenant context).
/// </summary>
public readonly record struct RequestId
{
    /// <summary>
    /// The string value of the request identifier.
    /// </summary>
    public string Value { get; }

    /// <summary>
    /// Initializes a new instance of the <see cref="RequestId"/> struct.
    /// </summary>
    /// <param name="value">The string value representing the request identifier.</param>
    public RequestId(string value) => Value = value;

    /// <inheritdoc/>
    public override string ToString() => Value;
}
