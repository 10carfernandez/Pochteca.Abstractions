// <auto-generated/>
#nullable enable
using System.Globalization;

namespace Pochteca;

/// <summary>
/// Convenience extensions for reading typed values from <see cref="RequestInfo.Items"/>.
/// </summary>
public static class RequestInfoExtensions
{
    /// <summary>
    /// Attempts to read a <see cref="int"/> from <see cref="RequestInfo.Items"/> using the specified key.
    /// Returns the provided default value if parsing fails.
    /// </summary>
    /// <param name="request">The request.</param>
    /// <param name="key">The item key.</param>
    /// <param name="defaultValue">The value to return if parsing fails.</param>
    /// <returns>The parsed <see cref="int"/> value, or <paramref name="defaultValue"/>.</returns>
    public static int GetInt(this RequestInfo request, string key, int defaultValue = 0)
    {
        if (request.Items.TryGetValue(key, out var value) && value is IConvertible)
        {
            try { return Convert.ToInt32(value, CultureInfo.InvariantCulture); }
            catch { /* ignore */ }
        }
        return defaultValue;
    }

    /// <summary>
    /// Attempts to read a <see cref="decimal"/> from <see cref="RequestInfo.Items"/> using the specified key.
    /// Returns the provided default value if parsing fails.
    /// </summary>
    /// <param name="request">The request.</param>
    /// <param name="key">The item key.</param>
    /// <param name="defaultValue">The value to return if parsing fails.</param>
    /// <returns>The parsed <see cref="decimal"/> value, or <paramref name="defaultValue"/>.</returns>
    public static decimal GetDecimal(this RequestInfo request, string key, decimal defaultValue = 0m)
    {
        if (request.Items.TryGetValue(key, out var value) && value is IConvertible)
        {
            try { return Convert.ToDecimal(value, CultureInfo.InvariantCulture); }
            catch { /* ignore */ }
        }
        return defaultValue;
    }
}
